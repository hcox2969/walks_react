[{"/Users/elenacox/Desktop/walks_react/src/index.js":"1","/Users/elenacox/Desktop/walks_react/src/reportWebVitals.js":"2","/Users/elenacox/Desktop/walks_react/src/App.js":"3","/Users/elenacox/Desktop/walks_react/src/Header/index.js":"4","/Users/elenacox/Desktop/walks_react/src/LoginRegisterForm/index.js":"5","/Users/elenacox/Desktop/walks_react/src/WalkContainer/index.js":"6","/Users/elenacox/Desktop/walks_react/src/WalkList/index.js":"7","/Users/elenacox/Desktop/walks_react/src/NewWalkForm/index.js":"8","/Users/elenacox/Desktop/walks_react/src/EditWalkModal/index.js":"9","/Users/elenacox/Desktop/walks_react/src/DropDowns/tools.js":"10","/Users/elenacox/Desktop/walks_react/src/DropDowns/materials.js":"11","/Users/elenacox/Desktop/walks_react/src/DropDowns/edging.js":"12","/Users/elenacox/Desktop/walks_react/src/DropDowns/path.js":"13"},{"size":546,"mtime":1607377258010,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":1607377258004,"results":"16","hashOfConfig":"15"},{"size":3653,"mtime":1607377258020,"results":"17","hashOfConfig":"15"},{"size":380,"mtime":1607377258018,"results":"18","hashOfConfig":"15"},{"size":10902,"mtime":1607439584371,"results":"19","hashOfConfig":"15"},{"size":5342,"mtime":1607377258013,"results":"20","hashOfConfig":"15"},{"size":1808,"mtime":1607441632471,"results":"21","hashOfConfig":"15"},{"size":1751,"mtime":1607391267890,"results":"22","hashOfConfig":"15"},{"size":2301,"mtime":1607377258006,"results":"23","hashOfConfig":"15"},{"size":1292,"mtime":1607377258015,"results":"24","hashOfConfig":"15"},{"size":950,"mtime":1607377258015,"results":"25","hashOfConfig":"15"},{"size":767,"mtime":1607377258015,"results":"26","hashOfConfig":"15"},{"size":785,"mtime":1607377258016,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1ix7w2y",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/Users/elenacox/Desktop/walks_react/src/index.js",[],["58","59"],"/Users/elenacox/Desktop/walks_react/src/reportWebVitals.js",[],"/Users/elenacox/Desktop/walks_react/src/App.js",[],"/Users/elenacox/Desktop/walks_react/src/Header/index.js",[],"/Users/elenacox/Desktop/walks_react/src/LoginRegisterForm/index.js",["60","61","62","63","64","65","66"],"/Users/elenacox/Desktop/walks_react/src/WalkContainer/index.js",["67","68","69","70","71","72","73","74"],"import React, { Component } from 'react'\nimport WalkList from '../WalkList'\nimport NewWalkForm from '../NewWalkForm'\nimport EditWalkModal from '../EditWalkModal'\nimport { Form, Button, Label, Segment, Modal, Header } from 'semantic-ui-react'\n\n\n\nexport default class WalkContainer extends Component {\n\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      walks: [],\n      idOfWalkToEdit: -1\n    }\n  }\n\n  componentDidMount() {\n    // get the Walks when this component is first rendered\n    this.getWalks()\n  }\n\n  getWalks = async () => {\n    try {\n    // load Walks from the Walk index route in our API\n    // note: be sure to add a / to the end of this url\n    // Flask/Flask-Cors expects this!!!\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/walks/\"\n      // console.log(\"about to fetch data from:\")\n      // console.log(url)\n      const walksResponse = await fetch(url, {\n        credentials: 'include'\n      })\n      // console.log(walksResponse)\n      const walksJson = await walksResponse.json()\n       console.log(walksJson)\n\n      this.setState({\n        walks: walksJson.data\n      })\n\n\n    } catch(err) {\n      console.log(\"Error getting walk data.\", err)\n    }\n  }\n\n  // add a deleteWalk f here\n  // it should take an id of the walk to delete\n  // and make the button to call it\n  deleteWalk = async (idOfWalkToDelete) => {\n    // console.log(idOfWalkToDelete)\n    // it should send a request to delete Walk\n\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/walks/\" + idOfWalkToDelete\n\n      const deleteWalkResponse = await fetch(url, {\n        credentials: 'include',\n        method: 'DELETE'\n      })\n      // console.log(\"deleteWalkResponse\", deleteWalkResponse)\n      const deleteWalkJson = await deleteWalkResponse.json()\n      console.log(\"deleteWalkJson\", deleteWalkJson)\n\n      if(deleteWalkResponse.status === 200) {\n        // option 1:\n        // this.getWalks()\n        // option 2:\n        // const Walks = this.state.Walks\n        // let indexOfWalkToDelete = 0\n        // for(let i = 0; i < Walks.length; i++) {\n        //   if(Walks[i].id == idOfWalkToDelete) {\n        //     indexOfWalkToDelete = i\n        //     break\n        //   }\n        // }\n        // walks.splice(indexOfWalkToDelete, 1)\n        // this.setState({ walks: walks })\n        // or you can use filter\n        this.setState({\n          walks: this.state.walks.filter(walk => walk.id !== idOfWalkToDelete)\n        })\n      }\n    } catch(err) {\n      console.log(\"Error deleting walk: \", err)\n    }\n\n  }\n\n  createWalk = async (walkToAdd) => {\n    // console.log(\"here is the walk you want to add\")\n    // console.log(walkToAdd)\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/walks/\"\n      const createWalkResponse = await fetch(url, {\n        credentials: 'include',\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(walkToAdd)\n      })\n      const createWalkJson = await createWalkResponse.json()\n      // console.log(createWolkJson)\n\n      if(createWalkResponse.status === 201 || createWalkResponse.status === 200){\n        this.setState({\n          walks: [...this.state.walks, createWalkJson.data]\n        })\n      }\n\n\n    } catch(err) {\n      console.log(\"Error adding walk\", err)\n    }\n  }\n\n  editWalk = (idOfWalkToEdit) => {\n    console.log(\"you are trying to edit walk with id: \", idOfWalkToEdit)\n\n    // put the id of the Walk that we want to edit in state\n    // to conditionally render a modal\n    this.setState({\n      idOfWalkToEdit: idOfWalkToEdit\n    })\n  }\n\n  updateWalk = async (updatedWalkInfo) => {\n    try {\n      const url = process.env.REACT_APP_API_URL + \"/api/v1/walks/\" + this.state.idOfWalkToEdit\n\n      const updateWalkResponse = await fetch(url, {\n        credentials: 'include',\n        method: 'PUT',\n        body: JSON.stringify(updatedWalkInfo),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      })\n\n      console.log(\"updateWalkResponse\", updateWalkResponse)\n      const updateWalkJson = await updateWalkResponse.json()\n      console.log(\"updateWalkJson\", updateWalkJson)\n\n      if(updateWalkResponse.status == 200) {\n        const walks = this.state.walks\n        const indexOfWalkBeingUpdated = walks.findIndex(walk => walk.id == this.state.idOfWalkToEdit)\n        walks[indexOfWalkBeingUpdated] = updateWalkJson.data\n        this.setState({\n          walks: walks,\n          idOfWalkToEdit: -1 // close the modal\n        })\n      }\n\n    } catch(err) {\n      console.log(\"Error updating walk info: \", err)\n    }\n  }\n\n  closeModal = () => {\n   this.setState({\n     idOfWalkToEdit: -1\n   })\n }\n\n  render() {\n    return (\n      <React.Fragment>\n        <h2>See the Walks</h2>\n        <NewWalkForm createWalk={this.createWalk}/>\n        <WalkList\n          walks={this.state.walks}\n          deleteWalk={this.deleteWalk}\n          editWalk={this.editWalk}\n        />\n        {\n          this.state.idOfWalkToEdit !== -1\n          &&\n          <EditWalkModal\n            key={this.state.idOfWalkToEdit}\n            walkToEdit={this.state.walks.find((walk) => walk.id === this.state.idOfWalkToEdit)}\n            updateWalk={this.updateWalk}\n            closeModal={this.closeModal}\n          />\n        }\n      </React.Fragment>\n    )\n  }\n}\n","/Users/elenacox/Desktop/walks_react/src/WalkList/index.js",["75","76"],"/Users/elenacox/Desktop/walks_react/src/NewWalkForm/index.js",["77","78","79"],"import React, { Component } from 'react'\nimport { Form, Label, Segment, Modal, Header, Dropdown } from 'semantic-ui-react'\nimport DropDownTools from '../DropDowns/tools.js'\nimport DropDownMaterials from '../DropDowns/materials.js'\nimport DropDownEdging from '../DropDowns/edging.js'\nimport DropDownPath from '../DropDowns/path.js'\nimport { Button } from 'reactstrap'\n\n\nexport default class NewWalkForm extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: '',\n      tools: '',\n      materials: '',\n      edging: '',\n      path: ''\n\n    }\n  }\n\n  handleChange = (event) => {\n    // console.log(event.target.name)\n    // console.log(event.target.value)\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n\n    this.props.createWalk(this.state)\n\n    this.setState({\n      name: '',\n      author: '',\n      tools: '',\n      materials: '',\n      edging: '',\n      path: ''\n    })\n\n  }\n\n\n  render()  {\n    return (\n      <Segment>\n        <h4> Create your new walk:</h4>\n        <Form onSubmit={this.handleSubmit}>\n          <Label>Name:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            placeholder=\"Enter a name\"\n            onChange={this.handleChange}\n          />\n          <Label>Tools:</Label>\n          <DropDownTools />\n          <Label>Materials:</Label>\n          <DropDownMaterials />\n          <Label>Edging:</Label>\n          <DropDownEdging />\n          <Label>Decorative Path:</Label>\n          <DropDownPath />\n\n          <Button class=\"btn btn-primary\" type=\"Submit\">Create Your New Walk</Button>\n        </Form>\n      </Segment>\n    )\n  }\n}\n","/Users/elenacox/Desktop/walks_react/src/EditWalkModal/index.js",["80"],"import React, { Component } from 'react'\nimport { Form, Button, Label, Segment, Modal, Header } from 'semantic-ui-react'\nimport '../index.css'\n\nexport default class EditWalkModal extends Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      name: props.walkToEdit.name,\n      tools: props.walkToEdit.tools,\n      materials: props.walkToEdit.materials,\n      edging: props.walkToEdit.materials,\n      path: props.walkToEdit.materials\n\n    }\n  }\n\n  handleChange = (event) => {\n    this.setState({\n      [event.target.name]: event.target.value\n    })\n  }\n\n  handleSubmit = (event) => {\n    event.preventDefault()\n    this.props.updateWalk(this.state)\n  }\n\n  render() {\n    return(\n      <Modal open={true} closeIcon={true} onClose={this.props.closeModal}>\n        <Header>\n          <h3>Enter new info</h3>\n        </Header>\n        <Modal.Content>\n          <Form onSubmit={this.handleSubmit}>\n          <Label>Name:</Label>\n          <Form.Input\n          type=\"text\"\n          name=\"name\"\n          value={this.state.name}\n          placeholder=\"Enter a name\"\n          onChange={this.handleChange}\n          />\n          <Label>Tools:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"tools\"\n            value={this.state.owner}\n            placeholder=\"Select tools from the list\"\n            onChange={this.handleChange}\n        />\n        <Label>Materials:</Label>\n        <Form.Input\n          type=\"text\"\n          name=\"materials\"\n          value={this.state.owner}\n          placeholder=\"Select materials from the list\"\n          onChange={this.handleChange}\n          />\n          <Label>Edging:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"edging\"\n            value={this.state.owner}\n            placeholder=\"Select edging from the list\"\n            onChange={this.handleChange}\n          />\n          <Label>Designer Path:</Label>\n          <Form.Input\n            type=\"text\"\n            name=\"path\"\n            value={this.state.owner}\n            placeholder=\"Select path from the list\"\n            onChange={this.handleChange}\n          />\n          <Modal.Actions>\n            <Button type=\"Submit\">Update Walk</Button>\n          </Modal.Actions>\n        </Form>\n      </Modal.Content>\n    </Modal>\n    )\n  }\n}\n","/Users/elenacox/Desktop/walks_react/src/DropDowns/tools.js",[],"/Users/elenacox/Desktop/walks_react/src/DropDowns/materials.js",[],"/Users/elenacox/Desktop/walks_react/src/DropDowns/edging.js",[],"/Users/elenacox/Desktop/walks_react/src/DropDowns/path.js",[],{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","replacedBy":"84"},{"ruleId":"85","severity":1,"message":"86","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":19},{"ruleId":"85","severity":1,"message":"89","line":5,"column":21,"nodeType":"87","messageId":"88","endLine":5,"endColumn":24},{"ruleId":"85","severity":1,"message":"90","line":5,"column":26,"nodeType":"87","messageId":"88","endLine":5,"endColumn":29},{"ruleId":"85","severity":1,"message":"91","line":5,"column":31,"nodeType":"87","messageId":"88","endLine":5,"endColumn":40},{"ruleId":"85","severity":1,"message":"92","line":5,"column":42,"nodeType":"87","messageId":"88","endLine":5,"endColumn":55},{"ruleId":"85","severity":1,"message":"93","line":5,"column":57,"nodeType":"87","messageId":"88","endLine":5,"endColumn":62},{"ruleId":"85","severity":1,"message":"94","line":6,"column":24,"nodeType":"87","messageId":"88","endLine":6,"endColumn":36},{"ruleId":"85","severity":1,"message":"95","line":5,"column":10,"nodeType":"87","messageId":"88","endLine":5,"endColumn":14},{"ruleId":"85","severity":1,"message":"96","line":5,"column":16,"nodeType":"87","messageId":"88","endLine":5,"endColumn":22},{"ruleId":"85","severity":1,"message":"97","line":5,"column":24,"nodeType":"87","messageId":"88","endLine":5,"endColumn":29},{"ruleId":"85","severity":1,"message":"98","line":5,"column":31,"nodeType":"87","messageId":"88","endLine":5,"endColumn":38},{"ruleId":"85","severity":1,"message":"99","line":5,"column":40,"nodeType":"87","messageId":"88","endLine":5,"endColumn":45},{"ruleId":"85","severity":1,"message":"100","line":5,"column":47,"nodeType":"87","messageId":"88","endLine":5,"endColumn":53},{"ruleId":"101","severity":1,"message":"102","line":148,"column":36,"nodeType":"103","messageId":"104","endLine":148,"endColumn":38},{"ruleId":"101","severity":1,"message":"102","line":150,"column":73,"nodeType":"103","messageId":"104","endLine":150,"endColumn":75},{"ruleId":"85","severity":1,"message":"105","line":3,"column":10,"nodeType":"87","messageId":"88","endLine":3,"endColumn":19},{"ruleId":"106","severity":1,"message":"107","line":63,"column":6,"nodeType":"108","endLine":63,"endColumn":42},{"ruleId":"85","severity":1,"message":"99","line":2,"column":32,"nodeType":"87","messageId":"88","endLine":2,"endColumn":37},{"ruleId":"85","severity":1,"message":"100","line":2,"column":39,"nodeType":"87","messageId":"88","endLine":2,"endColumn":45},{"ruleId":"85","severity":1,"message":"109","line":2,"column":47,"nodeType":"87","messageId":"88","endLine":2,"endColumn":55},{"ruleId":"85","severity":1,"message":"98","line":2,"column":31,"nodeType":"87","messageId":"88","endLine":2,"endColumn":38},"no-native-reassign",["110"],"no-negated-in-lhs",["111"],"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'Col' is defined but never used.","'Row' is defined but never used.","'ListGroup' is defined but never used.","'ListGroupItem' is defined but never used.","'Table' is defined but never used.","'CardSubtitle' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","'Label' is defined but never used.","'Segment' is defined but never used.","'Modal' is defined but never used.","'Header' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Jumbotron' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'Dropdown' is defined but never used.","no-global-assign","no-unsafe-negation"]